def gcdExt( a, m ):
	a = int(a%m)
	b = int(m)

	xold = 1
	x = 0
	xnew = -1
	while( b>1 ):
		q = a//b
		r = a%b

		xnew = xold - q*x
		xold = x
		x = xnew

		a = b
		b = r

	x = x%m

	return x

def main():
	P = int( input( "\nEnter the prime number P : " ) )
	G = int( input( "Enter the primitive root of P : " ) )

	a = int( input( "\nEnter the private key a : " ) )
	
	x = pow( G, a, P )
	print( "\nX, sent by Alice to Bob :", x )

	b = int( input( "\nEnter the private key b : " ) )
	mb = int( input( "Enter the msg to be sent by Bob to Alice : " ) )
	
	y = pow( G, b, P )
	kb = pow( x, b, P )
	c = (mb*kb)%P

	print( "\nShared secret key generated by Bob :", kb )
	print( "Ciphertext sent by Bob to Alice :", c )
	print( "Y, sent by Bob to Alice : ", y )

	ka = pow( y, a, P )
	kainv = gcdExt( ka, P )
	ma = (c*kainv)%P

	print( "\nShared secret key generated by Alice :", ka )
	print( "Deciphered text recovered by Alice :", ma )

main()